{"version":3,"sources":["title.js","create.js","folder.js","sort.js","notes.js","main.js","review.js","index.js"],"names":["Title","props","state","response","setTimeout","document","getElementById","innerHTML","className","id","style","marginTop","React","Component","CreateNote","title","localStorage","getItem","pathname","context","onClick","expand","onSubmit","noRefresh","name","rows","cols","placeholder","addNote","clearAll","restoreAll","clear","setItem","renderPage","i","removeReview","newNoteID","value","parseFloat","Folder","history1","history2","history3","history4","history5","openFolder","toUpperCase","display","window","location","SortNotes","size","changeSort","difficulty","LoadNotes","loadedNotes","push","loadNotes","counter","length","changeDifficulty","deleteNote","changeProgress","parseInt","review","checked","search","replace","searchGoogle","searchKhan","noteDOM","key","float","border","width","height","borderRadius","marginRight","backgroundColor","href","scrollTo","editNote","e","preventDefault","ReactDOM","render","ReviewNotes","progress","total","listBars","ratio","ratioString","Math","round","reviewMessage","barDOM","minWidth","setReview","color","days","date","Date","activeNotes","perDay","floor","separator","counted","date2","setDate","getDate","toDateString"],"mappings":"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","file":"static/js/main.e4011985.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class Title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    setTimeout(() => {\r\n      document.getElementById(\"title-text\").innerHTML = \"Develop\";\r\n    }, 2000);\r\n    setTimeout(() => {\r\n      document.getElementById(\"title-text\").innerHTML = \"Retain\";\r\n    }, 4000);\r\n    return (\r\n      <div className=\"title-container\">\r\n        <div className=\"title-text-1\" id=\"title-text\">\r\n          Record\r\n        </div>\r\n        <div className=\"title-text-2\">your own knowledge</div>\r\n        <div className=\"title-text-3\" style={{ marginTop: \"20px\" }}>\r\n          Create and Review notes, sort by difficulty,\r\n        </div>\r\n        <div className=\"title-text-3\">\r\n          and receive unique user-based suggestions.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { removeReview } from \"./review.js\";\r\nimport { pathname, expand, renderPage, noRefresh } from \"./main.js\";\r\n\r\nexport class CreateNote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    let title = \"title-\" + localStorage.getItem(pathname + \"note-count\");\r\n    let context = \"context-\" + localStorage.getItem(pathname + \"note-count\");\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"note-create-title\">\r\n          Create Notes\r\n          <button\r\n            className=\"display-expand\"\r\n            onClick={() => expand(\"display-create\")}\r\n          >\r\n            <div id=\"display-create-text\">Hide</div>\r\n          </button>\r\n        </div>\r\n        <div id=\"display-create\">\r\n          <form onSubmit={noRefresh}>\r\n            <textarea\r\n              id={title}\r\n              name={title}\r\n              rows=\"2\"\r\n              cols=\"50\"\r\n              placeholder=\"Enter a title, theme, or topic here\"\r\n            ></textarea>\r\n          </form>\r\n          <form onSubmit={noRefresh}>\r\n            <textarea\r\n              id={context}\r\n              name={context}\r\n              rows=\"5\"\r\n              cols=\"50\"\r\n              placeholder=\"Enter the context of the note here\"\r\n            ></textarea>\r\n          </form>\r\n          <button className=\"note-create-submit\" onClick={addNote}>\r\n            Create\r\n          </button>\r\n          <button className=\"note-create-clear\" onClick={clearAll}>\r\n            Clear All\r\n          </button>\r\n          <button className=\"note-create-restore\" onClick={restoreAll}>\r\n            Restore All\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Removes all of the existing notes\r\n **/\r\nfunction clearAll() {\r\n  localStorage.clear();\r\n  localStorage.setItem(pathname + \"note-count\", 0);\r\n  localStorage.setItem(pathname + \"note-loaded\", 0);\r\n  localStorage.setItem(pathname + \"note-sort\", \"none\");\r\n  localStorage.setItem(pathname + \"note-review-progress\", 0);\r\n  localStorage.setItem(pathname + \"note-review-total\", 0);\r\n\r\n  localStorage.setItem(\"note-folder-history\", \"notes\");\r\n  localStorage.setItem(\"note-folder-history-1\", \"notes\");\r\n  localStorage.setItem(\"note-folder-history-2\", \"\");\r\n  localStorage.setItem(\"note-folder-history-3\", \"\");\r\n  localStorage.setItem(\"note-folder-history-4\", \"\");\r\n  localStorage.setItem(\"note-folder-history-5\", \"\");\r\n\r\n  // Refreshing page classes\r\n  renderPage();\r\n}\r\n\r\n/**\r\n * Restores all deleted notes\r\n **/\r\nfunction restoreAll() {\r\n  // Looping through IDs to load\r\n  for (let i = localStorage.getItem(pathname + \"note-count\") - 1; i >= 0; i--) {\r\n    // setting all note visibilities to true\r\n    localStorage.setItem(pathname + \"note-id-\" + i + \"-visibility\", \"true\");\r\n  }\r\n\r\n  // Refreshing page classes\r\n  removeReview();\r\n  renderPage();\r\n}\r\n\r\n/**\r\n * Creates a new note\r\n **/\r\nfunction addNote() {\r\n  // Create new note ID\r\n  let newNoteID = localStorage.getItem(pathname + \"note-count\");\r\n\r\n  // Store new note data\r\n  localStorage.setItem(\r\n    pathname + \"note-id-\" + newNoteID + \"-title\",\r\n    document.getElementById(\"title-\" + newNoteID).value\r\n  );\r\n  localStorage.setItem(\r\n    pathname + \"note-id-\" + newNoteID + \"-context\",\r\n    document.getElementById(\"context-\" + newNoteID).value\r\n  );\r\n  localStorage.setItem(\r\n    pathname + \"note-id-\" + newNoteID + \"-visibility\",\r\n    \"true\"\r\n  );\r\n  localStorage.setItem(\r\n    pathname + \"note-id-\" + newNoteID + \"-difficulty\",\r\n    \"Medium\"\r\n  );\r\n  localStorage.setItem(pathname + \"note-id-\" + newNoteID + \"-review\", \"\");\r\n  localStorage.setItem(pathname + \"note-id-\" + newNoteID + \"-checked\", \"false\");\r\n\r\n  // Increasing note counter by 1, locStor returns string so must parse\r\n  localStorage.setItem(\r\n    pathname + \"note-count\",\r\n    parseFloat(localStorage.getItem(pathname + \"note-count\")) + 1\r\n  );\r\n\r\n  // Resetting text boxes\r\n  document.getElementById(\"title-\" + newNoteID).value = \"\";\r\n  document.getElementById(\"context-\" + newNoteID).value = \"\";\r\n\r\n  // Will Disable Review and Refresh classes\r\n  removeReview();\r\n}\r\n","import React from \"react\";\r\nimport { expand, noRefresh } from \"./main.js\";\r\n\r\nexport class Folder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    // Storing Recent Folder History\r\n    if (\r\n      localStorage.getItem(\"note-folder-history\", \"\") === null ||\r\n      localStorage.getItem(\"note-folder-history-1\", \"\") === null ||\r\n      localStorage.getItem(\"note-folder-history-2\", \"\") === null ||\r\n      localStorage.getItem(\"note-folder-history-3\", \"\") === null ||\r\n      localStorage.getItem(\"note-folder-history-4\", \"\") === null ||\r\n      localStorage.getItem(\"note-folder-history-5\", \"\") === null\r\n    ) {\r\n      localStorage.setItem(\"note-folder-history\", \"notes\");\r\n      localStorage.setItem(\"note-folder-history-1\", \"notes\");\r\n      localStorage.setItem(\"note-folder-history-2\", \"\");\r\n      localStorage.setItem(\"note-folder-history-3\", \"\");\r\n      localStorage.setItem(\"note-folder-history-4\", \"\");\r\n      localStorage.setItem(\"note-folder-history-5\", \"\");\r\n    }\r\n\r\n    let history1 = localStorage.getItem(\"note-folder-history-1\");\r\n    let history2 = localStorage.getItem(\"note-folder-history-2\");\r\n    let history3 = localStorage.getItem(\"note-folder-history-3\");\r\n    let history4 = localStorage.getItem(\"note-folder-history-4\");\r\n    let history5 = localStorage.getItem(\"note-folder-history-5\");\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"note-folder-title\">\r\n          Folders\r\n          <button\r\n            className=\"display-expand\"\r\n            onClick={() => expand(\"display-folder\")}\r\n          >\r\n            <div id=\"display-folder-text\">Hide</div>\r\n          </button>\r\n        </div>\r\n        <div id=\"display-folder\">\r\n          <div className=\"note-folder-context\">\r\n            Here you can create folders for your notes. Enter a folder name and\r\n            press enter to view its contents!\r\n          </div>\r\n          <form onSubmit={noRefresh}>\r\n            <textarea\r\n              id=\"history-folder\"\r\n              name=\"history-name\"\r\n              rows=\"2\"\r\n              cols=\"50\"\r\n              placeholder=\"Enter the Folder name here\"\r\n            ></textarea>\r\n          </form>\r\n          <button\r\n            className=\"note-create-submit\"\r\n            onClick={() =>\r\n              openFolder(document.getElementById(\"history-folder\").value)\r\n            }\r\n          >\r\n            Open Folder\r\n          </button>\r\n          <div className=\"note-folder-recent-title\">\r\n            Recent Folders (Currently Open:{\" \"}\r\n            {localStorage.getItem(\"note-folder-history\").toUpperCase()})\r\n          </div>\r\n          <div style={{ display: \"inline-block\" }}>\r\n            {history1 !== \"\" && (\r\n              <div\r\n                className=\"note-folder-history\"\r\n                onClick={() => openFolder(history1)}\r\n              >\r\n                {history1.toUpperCase()}\r\n              </div>\r\n            )}\r\n            {history2 !== \"\" && (\r\n              <div\r\n                className=\"note-folder-history\"\r\n                onClick={() => openFolder(history2)}\r\n              >\r\n                {history2.toUpperCase()}\r\n              </div>\r\n            )}\r\n            {history3 !== \"\" && (\r\n              <div\r\n                className=\"note-folder-history\"\r\n                onClick={() => openFolder(history3)}\r\n              >\r\n                {history3.toUpperCase()}\r\n              </div>\r\n            )}\r\n            {history4 !== \"\" && (\r\n              <div\r\n                className=\"note-folder-history\"\r\n                onClick={() => openFolder(history4)}\r\n              >\r\n                {history4.toUpperCase()}\r\n              </div>\r\n            )}\r\n            {history5 !== \"\" && (\r\n              <div\r\n                className=\"note-folder-history\"\r\n                onClick={() => openFolder(history5)}\r\n              >\r\n                {history5.toUpperCase()}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Opens a new folder\r\n * @param {string} name name of the folder that will be opened\r\n **/\r\nfunction openFolder(name) {\r\n  localStorage.setItem(\"note-folder-history\", name);\r\n  // eslint-disable-next-line\r\n  window.location.pathname = window.location.pathname;\r\n}\r\n","import React from \"react\";\r\nimport { pathname, expand, renderPage } from \"./main.js\";\r\n\r\nexport class SortNotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    let size = localStorage.getItem(pathname + \"note-loaded\");\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"note-sort-title\">\r\n          Sort Notes ({size})\r\n          <button\r\n            className=\"display-expand\"\r\n            onClick={() => expand(\"display-sort\")}\r\n          >\r\n            <div id={\"display-sort-text\"}>Hide</div>\r\n          </button>\r\n        </div>\r\n        <div id=\"display-sort\">\r\n          <button\r\n            className=\"note-sort-button-all\"\r\n            onClick={() => changeSort(\"none\")}\r\n          >\r\n            Show All\r\n          </button>\r\n          <button\r\n            className=\"note-sort-button-easy\"\r\n            onClick={() => changeSort(\"Easy\")}\r\n          >\r\n            Sort Easy\r\n          </button>\r\n          <button\r\n            className=\"note-sort-button-medium\"\r\n            onClick={() => changeSort(\"Medium\")}\r\n          >\r\n            Sort Medium\r\n          </button>\r\n          <button\r\n            className=\"note-sort-button-hard\"\r\n            onClick={() => changeSort(\"Hard\")}\r\n          >\r\n            Sort Hard\r\n          </button>\r\n          <button\r\n            className=\"note-sort-button-rank\"\r\n            onClick={() => changeSort(\"Rank\")}\r\n          >\r\n            Sort Ranked\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Changes how all of the notes will be sorted upon load\r\n * @param {string} difficulty type of new difficulty to sort by\r\n **/\r\nfunction changeSort(difficulty) {\r\n  // Setting new sort\r\n  localStorage.setItem(pathname + \"note-sort\", difficulty);\r\n\r\n  // Refreshing page classes\r\n  renderPage();\r\n}\r\n","import React from \"react\";\r\nimport { removeReview } from \"./review.js\";\r\nimport { pathname, renderPage } from \"./main.js\";\r\n\r\nexport class LoadNotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    let loadedNotes = []; // Will Store each loaded note\r\n\r\n    if (localStorage.getItem(pathname + \"note-sort\") === \"Rank\") {\r\n      localStorage.setItem(pathname + \"note-sort\", \"Hard\");\r\n      loadedNotes.push(loadNotes());\r\n      localStorage.setItem(pathname + \"note-sort\", \"Medium\");\r\n      loadedNotes.push(loadNotes());\r\n      localStorage.setItem(pathname + \"note-sort\", \"Easy\");\r\n      loadedNotes.push(loadNotes());\r\n      localStorage.setItem(pathname + \"note-sort\", \"Rank\");\r\n    } else {\r\n      loadedNotes = [loadNotes()];\r\n    }\r\n\r\n    // Counting number of notes loaded\r\n    let counter = 0;\r\n    for (let i = 0; i < loadedNotes.length; i++) {\r\n      counter += loadedNotes[i].length;\r\n    }\r\n    localStorage.setItem(pathname + \"note-loaded\", counter);\r\n\r\n    // Returning the notes to be loaded\r\n    return loadedNotes;\r\n  }\r\n}\r\n\r\n/**\r\n * Changes a notes difficulty\r\n * @param {integer} id id of the note to be changed\r\n * @param {string} difficulty notes type of new difficulty\r\n **/\r\nfunction changeDifficulty(id, difficulty) {\r\n  // Setting new difficulty\r\n  localStorage.setItem(pathname + \"note-id-\" + id + \"-difficulty\", difficulty);\r\n\r\n  // Refreshing page classes\r\n  renderPage();\r\n}\r\n\r\n/**\r\n * Creates a new note\r\n * @param {integer} i id of the note to be deleted\r\n **/\r\nfunction editNote(i) {\r\n  window.scrollTo(0, 0);\r\n  document.getElementById(\r\n    \"title-\" + localStorage.getItem(pathname + \"note-count\")\r\n  ).value = localStorage.getItem(pathname + \"note-id-\" + i + \"-title\");\r\n  document.getElementById(\r\n    \"context-\" + localStorage.getItem(pathname + \"note-count\")\r\n  ).value = localStorage.getItem(pathname + \"note-id-\" + i + \"-context\");\r\n  deleteNote(i);\r\n  removeReview();\r\n\r\n  // change note visibility\r\n  localStorage.setItem(pathname + \"note-id-\" + i + \"-visibility\", \"false\");\r\n  // Refreshing page classes\r\n  renderPage();\r\n}\r\n\r\n/**\r\n * Creates a new note\r\n * @param {integer} i id of the note to be deleted\r\n **/\r\nfunction deleteNote(i) {\r\n  // change note visibility\r\n  localStorage.setItem(pathname + \"note-id-\" + i + \"-visibility\", \"false\");\r\n  removeReview();\r\n  // Refreshing page classes\r\n  renderPage();\r\n}\r\n\r\n/**\r\n * Changes the progress of a note\r\n * @param {integer} i id of the note to be changed\r\n * @param {string} value value of progress\r\n **/\r\nfunction changeProgress(i, value) {\r\n  localStorage.setItem(pathname + \"note-id-\" + i + \"-checked\", value);\r\n\r\n  if (value === \"true\") {\r\n    // note is completed\r\n    localStorage.setItem(\r\n      pathname + \"note-review-progress\",\r\n      parseInt(localStorage.getItem(pathname + \"note-review-progress\")) + 1\r\n    );\r\n  } else {\r\n    localStorage.setItem(\r\n      pathname + \"note-review-progress\",\r\n      parseInt(localStorage.getItem(pathname + \"note-review-progress\")) - 1\r\n    );\r\n  }\r\n\r\n  // Refreshing page classes\r\n  renderPage();\r\n}\r\n\r\n/**\r\n * Returns all of the notes to be loaded\r\n **/\r\nfunction loadNotes() {\r\n  let loadedNotes = []; // Will Store each loaded note\r\n  // Looping through IDs to load\r\n  for (let i = localStorage.getItem(pathname + \"note-count\") - 1; i >= 0; i--) {\r\n    // Skips \"Deleted\" Notes\r\n    let visibility = localStorage.getItem(\r\n      pathname + \"note-id-\" + i + \"-visibility\"\r\n    );\r\n    if (visibility !== \"true\") {\r\n      continue;\r\n    }\r\n\r\n    // Getting specific note ID values\r\n    let title = localStorage.getItem(pathname + \"note-id-\" + i + \"-title\");\r\n    let context = localStorage.getItem(pathname + \"note-id-\" + i + \"-context\");\r\n    let difficulty = localStorage.getItem(\r\n      pathname + \"note-id-\" + i + \"-difficulty\"\r\n    );\r\n    let review = localStorage.getItem(pathname + \"note-id-\" + i + \"-review\");\r\n    let checked = localStorage.getItem(pathname + \"note-id-\" + i + \"-checked\");\r\n    let search =\r\n      \"https://www.youtube.com/results?search_query=\" + title.replace(\" \", \"+\");\r\n    let searchGoogle =\r\n      \"https://www.google.com/search?q=site:edu+\" + title.replace(\" \", \"+\");\r\n    let searchKhan =\r\n      \"https://www.khanacademy.org/search?referer=%2F&page_search_query=\" +\r\n      title.replace(\" \", \"+\");\r\n\r\n    let noteDOM = (\r\n      <div className=\"note-style\" key={i}>\r\n        <div className=\"note-difficulty-button-container\">\r\n          <button\r\n            className=\"note-button-easy\"\r\n            onClick={() => changeDifficulty(i, \"Easy\")}\r\n          >\r\n            Easy\r\n          </button>\r\n          <button\r\n            className=\"note-button-medium\"\r\n            onClick={() => changeDifficulty(i, \"Medium\")}\r\n          >\r\n            Medium\r\n          </button>\r\n          <button\r\n            className=\"note-button-hard\"\r\n            onClick={() => changeDifficulty(i, \"Hard\")}\r\n          >\r\n            Hard\r\n          </button>\r\n        </div>\r\n        <div className=\"note-difficulty\">\r\n          {difficulty === \"Easy\" && (\r\n            <div\r\n              style={{\r\n                float: \"left\",\r\n                border: \"1px solid #dedede\",\r\n                width: \"10px\",\r\n                height: \"10px\",\r\n                borderRadius: \"5px\",\r\n                marginTop: \"2.5px\",\r\n                marginRight: \"5px\",\r\n                backgroundColor: \"#88fb91\",\r\n              }}\r\n            ></div>\r\n          )}\r\n          {difficulty === \"Medium\" && (\r\n            <div\r\n              style={{\r\n                float: \"left\",\r\n                border: \"1px solid #dedede\",\r\n                width: \"10px\",\r\n                height: \"10px\",\r\n                borderRadius: \"5px\",\r\n                marginTop: \"2.5px\",\r\n                marginRight: \"5px\",\r\n                backgroundColor: \"#ecc864\",\r\n              }}\r\n            ></div>\r\n          )}\r\n          {difficulty === \"Hard\" && (\r\n            <div\r\n              style={{\r\n                float: \"left\",\r\n                border: \"1px solid #dedede\",\r\n                width: \"10px\",\r\n                height: \"10px\",\r\n                borderRadius: \"5px\",\r\n                marginTop: \"2.5px\",\r\n                marginRight: \"5px\",\r\n                backgroundColor: \"#c26660\",\r\n              }}\r\n            ></div>\r\n          )}\r\n          Difficulty: {difficulty}\r\n        </div>\r\n        {review !== \"\" && (\r\n          <div>\r\n            <br />\r\n            <b>Review by {review}</b>\r\n            {checked === \"false\" && (\r\n              <div className=\"note-progress-button-container\">\r\n                <button\r\n                  className=\"note-button-progress\"\r\n                  onClick={() => changeProgress(i, \"true\")}\r\n                >\r\n                  In Progress\r\n                </button>\r\n              </div>\r\n            )}\r\n            {checked === \"true\" && (\r\n              <div className=\"note-progress-button-container\">\r\n                <button\r\n                  className=\"note-button-complete\"\r\n                  onClick={() => changeProgress(i, \"false\")}\r\n                >\r\n                  Completed\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <br />\r\n        <div className=\"note-title\">{title}</div>\r\n        <br />\r\n        <div className=\"note-context\">{context}</div>\r\n        <br />\r\n        <div>Suggestions</div>\r\n        <br />\r\n        <div>\r\n          <a href={search} className=\"note-youtube-link\">\r\n            <div className=\"note-youtube-link-context\">YouTube Video</div>\r\n          </a>\r\n\r\n          <a href={searchGoogle} className=\"note-google-link\">\r\n            <div className=\"note-google-link-context\">Google Edu</div>\r\n          </a>\r\n\r\n          <a href={searchKhan} className=\"note-khan-link\">\r\n            <div className=\"note-khan-link-context\">Khan Acad</div>\r\n          </a>\r\n        </div>\r\n        <br />\r\n        <div>Configuration</div>\r\n        <br />\r\n        <button className=\"note-button-edit\" onClick={() => editNote(i)}>\r\n          Edit\r\n        </button>\r\n        <button className=\"note-button-delete\" onClick={() => deleteNote(i)}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    if (localStorage.getItem(pathname + \"note-sort\") === \"Easy\") {\r\n      if (difficulty === \"Easy\") {\r\n        loadedNotes.push(noteDOM); // add easy cards\r\n      }\r\n    } else if (localStorage.getItem(pathname + \"note-sort\") === \"Medium\") {\r\n      if (difficulty === \"Medium\") {\r\n        loadedNotes.push(noteDOM); // add easy cards\r\n      }\r\n    } else if (localStorage.getItem(pathname + \"note-sort\") === \"Hard\") {\r\n      if (difficulty === \"Hard\") {\r\n        loadedNotes.push(noteDOM); // add easy cards\r\n      }\r\n    } else {\r\n      loadedNotes.push(noteDOM); // adding to the loaded notes\r\n    }\r\n  }\r\n  return loadedNotes;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Title } from \"./title.js\";\r\nimport { ReviewNotes } from \"./review.js\";\r\nimport { CreateNote } from \"./create.js\";\r\nimport { Folder } from \"./folder.js\";\r\nimport { SortNotes } from \"./sort.js\";\r\nimport { LoadNotes } from \"./notes.js\";\r\n\r\n// Getting custom pathname that will allow for multiple folders\r\nexport let pathname = localStorage.getItem(\"note-folder-history\");\r\n\r\n/**\r\n * Preventing Site/Page Refresh when entering form\r\n **/\r\nexport let noRefresh = function (e) {\r\n  e.preventDefault();\r\n};\r\n\r\n/**\r\n * Show / Hide a feature\r\n * @param {string} id id of the DOM class to be changed\r\n **/\r\nexport function expand(id) {\r\n  if (document.getElementById(id).style.display === \"none\") {\r\n    document.getElementById(id).style.display = \"inline\";\r\n    document.getElementById(id + \"-text\").innerHTML = \"Hide\";\r\n  } else {\r\n    document.getElementById(id).style.display = \"none\";\r\n    document.getElementById(id + \"-text\").innerHTML = \"Show\";\r\n  }\r\n}\r\n\r\n/**\r\n * Re-renders all of the class components\r\n **/\r\nexport function renderPage() {\r\n  // Refreshing review\r\n  ReactDOM.render(<Title />, document.getElementById(\"title\"));\r\n  // Refreshing review\r\n  ReactDOM.render(<ReviewNotes />, document.getElementById(\"review-notes\"));\r\n  // Refreshing CreateNote - Updates newNoteID Value\r\n  ReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n  // Refreshing folder\r\n  ReactDOM.render(<Folder />, document.getElementById(\"folder-notes\"));\r\n  // Refreshing sort\r\n  ReactDOM.render(<SortNotes />, document.getElementById(\"sort-notes\"));\r\n  // Refreshing notes\r\n  ReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\n}\r\n","import React from \"react\";\r\nimport { pathname, expand, renderPage } from \"./main.js\";\r\n\r\nexport class ReviewNotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    let progress = localStorage.getItem(pathname + \"note-review-progress\");\r\n    let total = localStorage.getItem(pathname + \"note-review-total\");\r\n\r\n    let listBars = []; // where bars will be loaded\r\n    let length = \"\" + (100 / parseFloat(total) - 1) + \"%\";\r\n    let ratio = parseFloat(progress) / parseFloat(total);\r\n    let ratioString = Math.round(100 * ratio);\r\n\r\n    // Default message\r\n    let reviewMessage =\r\n      \"You've completed \" +\r\n      progress +\r\n      \" out of \" +\r\n      total +\r\n      \" notes. When reviewing notes, make sure to click the in-progress button to change the note's review status to complete. Then, you may return here to keep track of what progress you have made!\";\r\n    if (ratio > 0.25) {\r\n      reviewMessage =\r\n        \"Good job! You're making more progress with \" +\r\n        ratioString +\r\n        \"% completed! That's \" +\r\n        progress +\r\n        \" out of \" +\r\n        total +\r\n        \" notes. When reviewing notes, make sure to click the in-progress button to change the note's review status to complete. Then, you may return here to keep track of what progress you have made!\";\r\n    }\r\n    if (ratio > 0.5) {\r\n      reviewMessage =\r\n        \"Wow! You're already half way there with \" +\r\n        ratioString +\r\n        \"% reviewed! Amazing, now you've studied \" +\r\n        progress +\r\n        \" out of \" +\r\n        total +\r\n        \" notes. When reviewing notes, make sure to click the in-progress button to change the note's review status to complete. Then, you may return here to keep track of what progress you have made!\";\r\n    }\r\n    if (ratio > 0.75) {\r\n      reviewMessage =\r\n        \"Almost done! \" +\r\n        ratioString +\r\n        \"% is a great amount of progress that has been made! Not that many notes left! \" +\r\n        progress +\r\n        \" out of \" +\r\n        total +\r\n        \" notes are completed! Keep it up! When reviewing notes, make sure to click the in-progress button to change the note's review status to complete. Then, you may return here to keep track of what progress you have made!\";\r\n    }\r\n    if (ratio === 1) {\r\n      reviewMessage =\r\n        \"Congratulations! You've done it! \" +\r\n        ratioString +\r\n        \"%!!! Yup, thats a total of \" +\r\n        total +\r\n        \" reviewed notes! Feel free to continue studying as much as you would like. There's never enough knowledge to learn! As Benjamin Franklin once said, 'An investment in knowledge pays the best interest'. When reviewing notes, make sure to click the in-progress button to change the note's review status to complete. Then, you may return here to keep track of what progress you have made!\";\r\n    }\r\n\r\n    for (let i = 0; i < total; i++) {\r\n      let barDOM = (\r\n        <div\r\n          key={i}\r\n          style={{\r\n            float: \"left\",\r\n            width: length,\r\n            minWidth: \"5px\",\r\n            height: \"20px\",\r\n            border: \"1px solid #dedede\",\r\n            backgroundColor: \"#aad681\",\r\n            borderRadius: \"10px\",\r\n            marginRight: \"0.5%\",\r\n          }}\r\n        ></div>\r\n      );\r\n      if (i >= progress) {\r\n        barDOM = (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              float: \"left\",\r\n              width: length,\r\n              minWidth: \"5px\",\r\n              height: \"20px\",\r\n              border: \"1px solid #dedede\",\r\n              borderRadius: \"10px\",\r\n              marginRight: \"0.5%\",\r\n            }}\r\n          ></div>\r\n        );\r\n      }\r\n      listBars.push(barDOM);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"note-review-title\">\r\n          Review Notes{\" \"}\r\n          <button\r\n            className=\"display-expand\"\r\n            onClick={() => expand(\"display-review\")}\r\n          >\r\n            <div id=\"display-review-text\">Hide</div>\r\n          </button>\r\n        </div>\r\n        <div id=\"display-review\">\r\n          <div>How many days do you want for review?</div>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(2)}\r\n          >\r\n            2\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(3)}\r\n          >\r\n            3\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(4)}\r\n          >\r\n            4\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(5)}\r\n          >\r\n            5\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(6)}\r\n          >\r\n            6\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(7)}\r\n          >\r\n            7\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(8)}\r\n          >\r\n            8\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(9)}\r\n          >\r\n            9\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(10)}\r\n          >\r\n            10\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(11)}\r\n          >\r\n            11\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(12)}\r\n          >\r\n            12\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(13)}\r\n          >\r\n            13\r\n          </button>\r\n          <button\r\n            className=\"note-review-button-days\"\r\n            onClick={() => setReview(14)}\r\n          >\r\n            14\r\n          </button>\r\n          {total !== \"0\" && (\r\n            <div className=\"note-review-info\">\r\n              <br />\r\n              <button\r\n                className=\"note-review-button-disable\"\r\n                onClick={() => removeReview()}\r\n              >\r\n                Disabled Review Feature\r\n              </button>\r\n              <br />\r\n              <div style={{ marginTop: \"20px\" }}>\r\n                {listBars}\r\n                <span style={{ color: \"white\" }}>review</span>\r\n              </div>\r\n              <br />\r\n              <div className=\"note-review-info-text\">{reviewMessage}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Changes review setting\r\n * @param {integer} days id of the note to be changed\r\n **/\r\nfunction setReview(days) {\r\n  let date = new Date();\r\n\r\n  // Getting number of active notes\r\n  let activeNotes = 0;\r\n  // Getting specific note ID values\r\n  for (let i = localStorage.getItem(pathname + \"note-count\") - 1; i >= 0; i--) {\r\n    if (\r\n      localStorage.getItem(pathname + \"note-id-\" + i + \"-visibility\") === \"true\"\r\n    ) {\r\n      activeNotes++;\r\n    }\r\n  }\r\n  localStorage.setItem(pathname + \"note-review-total\", activeNotes);\r\n\r\n  // Making sure days don't exceed notes - defaults to 1 note per day\r\n  if (days > activeNotes) {\r\n    days = activeNotes;\r\n  }\r\n\r\n  let perDay = Math.floor(activeNotes / days); // how many notes to load per day\r\n  let separator = 0; // how many days to increment by, from the original\r\n  let counted = 0; // number of cards that have been assigned\r\n\r\n  // Resetting sort\r\n  localStorage.setItem(pathname + \"note-sort\", \"none\");\r\n  // Getting specific note ID values\r\n  for (let i = localStorage.getItem(pathname + \"note-count\") - 1; i >= 0; i--) {\r\n    if (\r\n      localStorage.getItem(pathname + \"note-id-\" + i + \"-visibility\") === \"true\"\r\n    ) {\r\n      let date2 = new Date();\r\n      date2.setDate(date.getDate() + separator);\r\n      localStorage.setItem(\r\n        pathname + \"note-id-\" + i + \"-review\",\r\n        date2.toDateString()\r\n      );\r\n\r\n      // Properly adjusting perDay to assign optimal amount of cards for each day\r\n      if (separator > days - 1 - (activeNotes % days)) {\r\n        perDay = Math.floor(activeNotes / days) + 1;\r\n      }\r\n\r\n      counted++; // card has been assigned\r\n      if (counted % perDay === 0) {\r\n        separator++; // increases the date\r\n        counted = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Refreshing page classes\r\n  renderPage();\r\n}\r\n\r\n/**\r\n * Changes review setting\r\n **/\r\nexport function removeReview() {\r\n  // Getting specific note ID values\r\n  for (let i = localStorage.getItem(pathname + \"note-count\") - 1; i >= 0; i--) {\r\n    localStorage.setItem(pathname + \"note-id-\" + i + \"-review\", \"\");\r\n    localStorage.setItem(pathname + \"note-id-\" + i + \"-checked\", \"false\");\r\n  }\r\n\r\n  // Reseting review values\r\n  localStorage.setItem(pathname + \"note-review-progress\", 0);\r\n  localStorage.setItem(pathname + \"note-review-total\", 0);\r\n\r\n  // Refreshing page classes\r\n  renderPage();\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Title } from \"./title.js\";\r\nimport { ReviewNotes } from \"./review.js\";\r\nimport { CreateNote } from \"./create.js\";\r\nimport { Folder } from \"./folder.js\";\r\nimport { SortNotes } from \"./sort.js\";\r\nimport { LoadNotes } from \"./notes.js\";\r\nimport { pathname } from \"./main.js\";\r\n\r\n// Initializng counter for amount of notes and sort type\r\nif (localStorage.getItem(pathname + \"note-count\") === null) {\r\n  localStorage.setItem(pathname + \"note-count\", 0);\r\n  localStorage.setItem(pathname + \"note-loaded\", 0);\r\n  localStorage.setItem(pathname + \"note-sort\", \"none\");\r\n  localStorage.setItem(pathname + \"note-review-progress\", 0);\r\n  localStorage.setItem(pathname + \"note-review-total\", 0);\r\n}\r\n\r\n// Checking to see if there is a new folder\r\nif (\r\n  localStorage.getItem(\"note-folder-history-1\") === pathname ||\r\n  localStorage.getItem(\"note-folder-history-2\") === pathname ||\r\n  localStorage.getItem(\"note-folder-history-3\") === pathname ||\r\n  localStorage.getItem(\"note-folder-history-4\") === pathname ||\r\n  localStorage.getItem(\"note-folder-history-5\") === pathname\r\n) {\r\n  // if there are no new folders, do nothing\r\n} else {\r\n  // Otherwise, Updating Recent Folder History\r\n  localStorage.setItem(\r\n    \"note-folder-history-5\",\r\n    localStorage.getItem(\"note-folder-history-4\")\r\n  );\r\n  localStorage.setItem(\r\n    \"note-folder-history-4\",\r\n    localStorage.getItem(\"note-folder-history-3\")\r\n  );\r\n  localStorage.setItem(\r\n    \"note-folder-history-3\",\r\n    localStorage.getItem(\"note-folder-history-2\")\r\n  );\r\n  localStorage.setItem(\r\n    \"note-folder-history-2\",\r\n    localStorage.getItem(\"note-folder-history-1\")\r\n  );\r\n  localStorage.setItem(\"note-folder-history-1\", pathname);\r\n}\r\n\r\n// Rendering all of the Class Components\r\nReactDOM.render(<Title />, document.getElementById(\"title\"));\r\nReactDOM.render(<ReviewNotes />, document.getElementById(\"review-notes\"));\r\nReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\nReactDOM.render(<Folder />, document.getElementById(\"folder-notes\"));\r\nReactDOM.render(<SortNotes />, document.getElementById(\"sort-notes\"));\r\nReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\n"],"sourceRoot":""}