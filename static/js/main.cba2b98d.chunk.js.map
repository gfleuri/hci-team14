{"version":3,"sources":["App.js","notes.js","index.js"],"names":["App","props","state","response","src","alt","width","height","style","marginTop","marginBottom","fontSize","React","Component","localStorage","getItem","setItem","noRefresh","e","preventDefault","clearAll","clear","ReactDOM","render","document","getElementById","addNote","newNoteID","value","parseFloat","CreateNote","title","context","onSubmit","id","name","rows","cols","placeholder","margin","onClick","LoadNotes","loadedNotes","i","noteDOM","className","key","push"],"mappings":"sLAEaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,SAAU,IAFR,EADrB,kGASI,OACE,6BACE,yBACEC,IAAI,sBACJC,IAAI,WACJC,MAAM,MACNC,OAAO,MACPC,MAAO,CAAEC,UAAW,UAEtB,yBACED,MAAO,CAAEC,UAAW,OAAQC,aAAc,OAAQC,SAAU,SAD9D,oBAKA,yBACEP,IAAI,8DACJC,IAAI,MACJC,MAAM,MACNC,OAAO,aA3BjB,GAAyBK,IAAMC,WCEY,OAAvCC,aAAaC,QAAQ,eACvBD,aAAaE,QAAQ,aAAc,GAIrC,IAAIC,EAAY,SAAUC,GACxBA,EAAEC,kBAGJ,SAASC,IACPN,aAAaO,QACbP,aAAaE,QAAQ,aAAc,GAEnCM,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,eAEvDH,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,gBAI1D,SAASC,IAEP,IAAIC,EAAYb,aAAaC,QAAQ,cAGrCD,aAAaE,QACX,WAAaW,EAAY,SACzBH,SAASC,eAAe,SAAWE,GAAWC,OAEhDd,aAAaE,QACX,WAAaW,EAAY,WACzBH,SAASC,eAAe,WAAaE,GAAWC,OAElDd,aAAaE,QAAQ,WAAaW,EAAY,cAAe,QAG7Db,aAAaE,QACX,aACAa,WAAWf,aAAaC,QAAQ,eAAiB,GAInDS,SAASC,eAAe,SAAWE,GAAWC,MAAQ,GACtDJ,SAASC,eAAe,WAAaE,GAAWC,MAAQ,GAGxDN,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,eAEvDH,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,gBAGnD,IAAMK,EAAb,kDACE,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,SAAU,IAFR,EADrB,kGASI,IAAI4B,EAAQ,SAAWjB,aAAaC,QAAQ,cACxCiB,EAAU,WAAalB,aAAaC,QAAQ,cAChD,OACE,6BACE,yBAAKP,MAAO,CAAEE,aAAc,SAA5B,iBADF,QAGE,0BAAMuB,SAAUhB,GACd,8BACEiB,GAAIH,EACJI,KAAMJ,EACNK,KAAK,IACLC,KAAK,KACLC,YAAY,yCATlB,UAaE,0BAAML,SAAUhB,GACd,8BACEiB,GAAIF,EACJG,KAAMH,EACNI,KAAK,IACLC,KAAK,KACLC,YAAY,wCAGhB,4BAAQ9B,MAAO,CAAE+B,OAAQ,QAAUC,QAASd,GAA5C,UAGA,4BAAQlB,MAAO,CAAE+B,OAAQ,QAAUC,QAASpB,GAA5C,kBArCR,GAAgCR,IAAMC,WA6CzB4B,EAAb,kDACE,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,SAAU,IAFR,EADrB,kGAWI,IAFA,IAAIuC,EAAc,GAETC,EAAI7B,aAAaC,QAAQ,cAAgB,EAAG4B,GAAK,EAAGA,IAAK,CAEhE,IAAIZ,EAAQjB,aAAaC,QAAQ,WAAa4B,EAAI,UAC9CX,EAAUlB,aAAaC,QAAQ,WAAa4B,EAAI,YAEhDC,EACF,yBAAKC,UAAU,aAAaC,IAAKH,GAC/B,6BACE,qCAEF,6BAAMZ,GACN,6BACA,6BACE,uCAEF,6BAAMC,IAMVU,EAAYK,KAAKH,GAInB,OAAOF,MApCX,GAA+B9B,IAAMC,WC7FrCS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SACjDH,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,eACvDH,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,iB","file":"static/js/main.cba2b98d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { response: \"\" };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div>\n        <img\n          src=\"/hci-team14/hci.jpg\"\n          alt=\"HCI Icon\"\n          width=\"150\"\n          height=\"150\"\n          style={{ marginTop: \"10px\" }}\n        ></img>\n        <div\n          style={{ marginTop: \"10px\", marginBottom: \"20px\", fontSize: \"28px\" }}\n        >\n          Hello teammates!\n        </div>\n        <img\n          src=\"https://media4.giphy.com/media/2SYc7mttUnWWaqvWz8/giphy.gif\"\n          alt=\"Cat\"\n          width=\"70%\"\n          height=\"70%\"\n        ></img>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Initializng counter for amount of notes\r\nif (localStorage.getItem(\"note-count\") === null) {\r\n  localStorage.setItem(\"note-count\", 0);\r\n}\r\n\r\n// Preventing Site/Page Refresh when entering form\r\nlet noRefresh = function (e) {\r\n  e.preventDefault();\r\n};\r\n\r\nfunction clearAll() {\r\n  localStorage.clear();\r\n  localStorage.setItem(\"note-count\", 0);\r\n  // Refreshing notes\r\n  ReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\n  // Refreshing CreateNote - Updates newNoteID Value\r\n  ReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n}\r\n\r\n// Adding NEW notes\r\nfunction addNote() {\r\n  // Create new note ID\r\n  let newNoteID = localStorage.getItem(\"note-count\");\r\n\r\n  // Store new note data\r\n  localStorage.setItem(\r\n    \"note-id-\" + newNoteID + \"-title\",\r\n    document.getElementById(\"title-\" + newNoteID).value\r\n  );\r\n  localStorage.setItem(\r\n    \"note-id-\" + newNoteID + \"-context\",\r\n    document.getElementById(\"context-\" + newNoteID).value\r\n  );\r\n  localStorage.setItem(\"note-id-\" + newNoteID + \"-visibility\", \"true\");\r\n\r\n  // Increasing note counter by 1, locStor returns string so must parse\r\n  localStorage.setItem(\r\n    \"note-count\",\r\n    parseFloat(localStorage.getItem(\"note-count\")) + 1\r\n  );\r\n\r\n  // Resetting text boxes\r\n  document.getElementById(\"title-\" + newNoteID).value = \"\";\r\n  document.getElementById(\"context-\" + newNoteID).value = \"\";\r\n\r\n  // Refreshing notes\r\n  ReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\n  // Refreshing CreateNote - Updates newNoteID Value\r\n  ReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n}\r\n\r\nexport class CreateNote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    let title = \"title-\" + localStorage.getItem(\"note-count\");\r\n    let context = \"context-\" + localStorage.getItem(\"note-count\");\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: \"10px\" }}>Create a note</div>\r\n        Title\r\n        <form onSubmit={noRefresh}>\r\n          <textarea\r\n            id={title}\r\n            name={title}\r\n            rows=\"2\"\r\n            cols=\"50\"\r\n            placeholder=\"Enter a title, theme, or topic here\"\r\n          ></textarea>\r\n        </form>\r\n        Context\r\n        <form onSubmit={noRefresh}>\r\n          <textarea\r\n            id={context}\r\n            name={context}\r\n            rows=\"5\"\r\n            cols=\"50\"\r\n            placeholder=\"Enter the context of the note here\"\r\n          ></textarea>\r\n        </form>\r\n        <button style={{ margin: \"10px\" }} onClick={addNote}>\r\n          Create\r\n        </button>\r\n        <button style={{ margin: \"10px\" }} onClick={clearAll}>\r\n          Clear All\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class LoadNotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    let loadedNotes = []; // Will Store each loaded note\r\n    // Looping through IDs to load\r\n    for (let i = localStorage.getItem(\"note-count\") - 1; i >= 0; i--) {\r\n      // Getting specific note ID values\r\n      let title = localStorage.getItem(\"note-id-\" + i + \"-title\");\r\n      let context = localStorage.getItem(\"note-id-\" + i + \"-context\");\r\n\r\n      let noteDOM = (\r\n        <div className=\"note-style\" key={i}>\r\n          <div>\r\n            <b>Title</b>\r\n          </div>\r\n          <div>{title}</div>\r\n          <br />\r\n          <div>\r\n            <b>Context</b>\r\n          </div>\r\n          <div>{context}</div>\r\n        </div>\r\n      );\r\n\r\n      // skipping over empty id 0\r\n      //if (noteID > 0) {\r\n      loadedNotes.push(noteDOM); // adding to the loaded notes\r\n      //}\r\n    }\r\n\r\n    return loadedNotes;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App.js\";\r\nimport { CreateNote } from \"./notes.js\";\r\nimport { LoadNotes } from \"./notes.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\nReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n"],"sourceRoot":""}