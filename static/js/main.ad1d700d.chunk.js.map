{"version":3,"sources":["notes.js","index.js"],"names":["changeSort","difficulty","localStorage","setItem","ReactDOM","render","document","getElementById","changeDifficulty","id","getItem","noRefresh","e","preventDefault","clearAll","clear","addNote","newNoteID","value","parseFloat","loadNotes","loadedNotes","i","title","context","search","replace","noteDOM","className","key","style","float","onClick","href","marginLeft","push","CreateNote","props","state","response","marginBottom","onSubmit","name","rows","cols","placeholder","margin","React","Component","LoadNotes"],"mappings":"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","file":"static/js/main.ad1d700d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Initializng counter for amount of notes\r\nif (localStorage.getItem(\"note-count\") === null) {\r\n  localStorage.setItem(\"note-count\", 0);\r\n  localStorage.setItem(\"note-sort\", \"none\");\r\n}\r\n\r\nfunction changeSort(difficulty) {\r\n  // Setting new sort\r\n  localStorage.setItem(\"note-sort\", difficulty);\r\n\r\n  // Refreshing notes\r\n  ReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\n  // Refreshing CreateNote - Updates newNoteID Value\r\n  ReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n}\r\n\r\nfunction changeDifficulty(id, difficulty) {\r\n  // Setting new difficulty\r\n  localStorage.setItem(\"note-id-\" + id + \"-difficulty\", difficulty);\r\n\r\n  // Refreshing notes\r\n  ReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\n  // Refreshing CreateNote - Updates newNoteID Value\r\n  ReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n}\r\n\r\n// Preventing Site/Page Refresh when entering form\r\nlet noRefresh = function (e) {\r\n  e.preventDefault();\r\n};\r\n\r\nfunction clearAll() {\r\n  localStorage.clear();\r\n  localStorage.setItem(\"note-count\", 0);\r\n  localStorage.setItem(\"note-sort\", \"none\");\r\n  // Refreshing notes\r\n  ReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\n  // Refreshing CreateNote - Updates newNoteID Value\r\n  ReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n}\r\n\r\n// Adding NEW notes\r\nfunction addNote() {\r\n  // Create new note ID\r\n  let newNoteID = localStorage.getItem(\"note-count\");\r\n\r\n  // Store new note data\r\n  localStorage.setItem(\r\n    \"note-id-\" + newNoteID + \"-title\",\r\n    document.getElementById(\"title-\" + newNoteID).value\r\n  );\r\n  localStorage.setItem(\r\n    \"note-id-\" + newNoteID + \"-context\",\r\n    document.getElementById(\"context-\" + newNoteID).value\r\n  );\r\n  localStorage.setItem(\"note-id-\" + newNoteID + \"-visibility\", \"true\");\r\n  localStorage.setItem(\"note-id-\" + newNoteID + \"-difficulty\", \"Medium\");\r\n\r\n  // Increasing note counter by 1, locStor returns string so must parse\r\n  localStorage.setItem(\r\n    \"note-count\",\r\n    parseFloat(localStorage.getItem(\"note-count\")) + 1\r\n  );\r\n\r\n  // Resetting text boxes\r\n  document.getElementById(\"title-\" + newNoteID).value = \"\";\r\n  document.getElementById(\"context-\" + newNoteID).value = \"\";\r\n\r\n  // Refreshing notes\r\n  ReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\n  // Refreshing CreateNote - Updates newNoteID Value\r\n  ReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n}\r\n\r\nfunction loadNotes() {\r\n  let loadedNotes = []; // Will Store each loaded note\r\n  // Looping through IDs to load\r\n  for (let i = localStorage.getItem(\"note-count\") - 1; i >= 0; i--) {\r\n    // Getting specific note ID values\r\n    let title = localStorage.getItem(\"note-id-\" + i + \"-title\");\r\n    let context = localStorage.getItem(\"note-id-\" + i + \"-context\");\r\n    let difficulty = localStorage.getItem(\"note-id-\" + i + \"-difficulty\");\r\n    let search =\r\n      \"https://www.youtube.com/results?search_query=\" + title.replace(\" \", \"+\");\r\n\r\n    let noteDOM = (\r\n      <div className=\"note-style\" key={i}>\r\n        <div style={{ float: \"right\" }}>\r\n          <button onClick={() => changeDifficulty(i, \"Easy\")}>Easy</button>\r\n          <button onClick={() => changeDifficulty(i, \"Medium\")}>Medium</button>\r\n          <button onClick={() => changeDifficulty(i, \"Hard\")}>Hard</button>\r\n        </div>\r\n        <div>\r\n          <b>Difficulty: {difficulty}</b>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <b>Title</b>\r\n        </div>\r\n        <div>{title}</div>\r\n        <br />\r\n        <div>\r\n          <b>Context</b>\r\n        </div>\r\n        <div>{context}</div>\r\n        <br />\r\n        <div>\r\n          <b>Suggestions</b>\r\n        </div>\r\n        <div>\r\n          <a href={search} style={{ marginLeft: \"10px\" }}>\r\n            Note to YouTube\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (localStorage.getItem(\"note-sort\") === \"Easy\") {\r\n      if (difficulty === \"Easy\") {\r\n        loadedNotes.push(noteDOM); // add easy cards\r\n      }\r\n    } else if (localStorage.getItem(\"note-sort\") === \"Medium\") {\r\n      if (difficulty === \"Medium\") {\r\n        loadedNotes.push(noteDOM); // add easy cards\r\n      }\r\n    } else if (localStorage.getItem(\"note-sort\") === \"Hard\") {\r\n      if (difficulty === \"Hard\") {\r\n        loadedNotes.push(noteDOM); // add easy cards\r\n      }\r\n    } else {\r\n      loadedNotes.push(noteDOM); // adding to the loaded notes\r\n    }\r\n  }\r\n  return loadedNotes;\r\n}\r\n\r\nexport class CreateNote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    let title = \"title-\" + localStorage.getItem(\"note-count\");\r\n    let context = \"context-\" + localStorage.getItem(\"note-count\");\r\n    return (\r\n      <div>\r\n        <button onClick={() => changeSort(\"none\")}>Show All</button>\r\n        <button onClick={() => changeSort(\"Easy\")}>Sort Easy</button>\r\n        <button onClick={() => changeSort(\"Medium\")}>Sort Medium</button>\r\n        <button onClick={() => changeSort(\"Hard\")}>Sort Hard</button>\r\n        <button onClick={() => changeSort(\"Rank\")}>Sort Ranked</button>\r\n        <div style={{ marginBottom: \"10px\" }}>Create a note</div>\r\n        Title\r\n        <form onSubmit={noRefresh}>\r\n          <textarea\r\n            id={title}\r\n            name={title}\r\n            rows=\"2\"\r\n            cols=\"50\"\r\n            placeholder=\"Enter a title, theme, or topic here\"\r\n          ></textarea>\r\n        </form>\r\n        Context\r\n        <form onSubmit={noRefresh}>\r\n          <textarea\r\n            id={context}\r\n            name={context}\r\n            rows=\"5\"\r\n            cols=\"50\"\r\n            placeholder=\"Enter the context of the note here\"\r\n          ></textarea>\r\n        </form>\r\n        <button style={{ margin: \"10px\" }} onClick={addNote}>\r\n          Create\r\n        </button>\r\n        <button style={{ margin: \"10px\" }} onClick={clearAll}>\r\n          Clear All\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class LoadNotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { response: \"\" };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    let loadedNotes = []; // Will Store each loaded note\r\n\r\n    if (localStorage.getItem(\"note-sort\") === \"Rank\") {\r\n      localStorage.setItem(\"note-sort\", \"Hard\");\r\n      loadedNotes.push(loadNotes());\r\n      localStorage.setItem(\"note-sort\", \"Medium\");\r\n      loadedNotes.push(loadNotes());\r\n      localStorage.setItem(\"note-sort\", \"Easy\");\r\n      loadedNotes.push(loadNotes());\r\n    } else {\r\n      loadedNotes = loadNotes();\r\n    }\r\n\r\n    return loadedNotes;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CreateNote } from \"./notes.js\";\r\nimport { LoadNotes } from \"./notes.js\";\r\n\r\nReactDOM.render(<LoadNotes />, document.getElementById(\"load-notes\"));\r\nReactDOM.render(<CreateNote />, document.getElementById(\"create-note\"));\r\n"],"sourceRoot":""}